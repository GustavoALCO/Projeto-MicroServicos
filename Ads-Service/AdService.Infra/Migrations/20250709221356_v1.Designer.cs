// <auto-generated />
using System;
using AuthUsers.infra.DbConfig;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AdsService.Infra.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20250709221356_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AdsService.Dommain.Entities.Product", b =>
                {
                    b.Property<Guid>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uuid");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("IdProduct");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AdsService.Dommain.Entities.Product", b =>
                {
                    b.OwnsOne("AdsService.Dommain.Entities.Category", "Category", b1 =>
                        {
                            b1.Property<Guid>("ProductIdProduct")
                                .HasColumnType("uuid");

                            b1.Property<string>("CategoryType")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ProductIdProduct");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductIdProduct");

                            b1.OwnsOne("AdsService.Dommain.Entities.Car", "Car", b2 =>
                                {
                                    b2.Property<Guid>("CategoryProductIdProduct")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("CarBrand")
                                        .HasColumnType("text");

                                    b2.Property<string>("Color")
                                        .HasColumnType("text");

                                    b2.Property<decimal?>("Engine")
                                        .HasColumnType("numeric");

                                    b2.Property<string>("Fuel")
                                        .HasColumnType("text");

                                    b2.Property<bool?>("Gearbox")
                                        .HasColumnType("boolean");

                                    b2.Property<int?>("KM")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Model")
                                        .HasColumnType("text");

                                    b2.Property<string>("Type")
                                        .HasColumnType("text");

                                    b2.Property<string>("Year")
                                        .HasColumnType("text");

                                    b2.HasKey("CategoryProductIdProduct");

                                    b2.ToTable("Products");

                                    b2.WithOwner()
                                        .HasForeignKey("CategoryProductIdProduct");
                                });

                            b1.OwnsOne("AdsService.Dommain.Entities.Houses", "House", b2 =>
                                {
                                    b2.Property<Guid>("CategoryProductIdProduct")
                                        .HasColumnType("uuid");

                                    b2.Property<int?>("Beathroom")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("Bedroom")
                                        .HasColumnType("integer");

                                    b2.Property<int>("CarSpace")
                                        .HasColumnType("integer");

                                    b2.Property<string>("House")
                                        .HasColumnType("text");

                                    b2.Property<string>("ZIPCode")
                                        .HasColumnType("text");

                                    b2.HasKey("CategoryProductIdProduct");

                                    b2.ToTable("Products");

                                    b2.WithOwner()
                                        .HasForeignKey("CategoryProductIdProduct");
                                });

                            b1.Navigation("Car");

                            b1.Navigation("House");
                        });

                    b.OwnsMany("AdsService.Dommain.Entities.Images", "Images", b1 =>
                        {
                            b1.Property<Guid>("ProductIdProduct")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<byte[]>("Data")
                                .IsRequired()
                                .HasColumnType("bytea");

                            b1.HasKey("ProductIdProduct", "Id");

                            b1.ToTable("Images");

                            b1.WithOwner()
                                .HasForeignKey("ProductIdProduct");
                        });

                    b.Navigation("Category")
                        .IsRequired();

                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
